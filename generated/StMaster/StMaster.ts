// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddedBatchMetadata extends ethereum.Event {
  get params(): AddedBatchMetadata__Params {
    return new AddedBatchMetadata__Params(this);
  }
}

export class AddedBatchMetadata__Params {
  _event: AddedBatchMetadata;

  constructor(event: AddedBatchMetadata) {
    this._event = event;
  }

  get batchId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get key(): string {
    return this._event.parameters[1].value.toString();
  }

  get value(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class AddedCcyType extends ethereum.Event {
  get params(): AddedCcyType__Params {
    return new AddedCcyType__Params(this);
  }
}

export class AddedCcyType__Params {
  _event: AddedCcyType;

  constructor(event: AddedCcyType) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get unit(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class AddedSecTokenType extends ethereum.Event {
  get params(): AddedSecTokenType__Params {
    return new AddedSecTokenType__Params(this);
  }
}

export class AddedSecTokenType__Params {
  _event: AddedSecTokenType;

  constructor(event: AddedSecTokenType) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get settlementType(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get expiryTimestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get underlyerTypeId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get refCcyId(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get initMarginBips(): i32 {
    return this._event.parameters[6].value.toI32();
  }

  get varMarginBips(): i32 {
    return this._event.parameters[7].value.toI32();
  }
}

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Burned extends ethereum.Event {
  get params(): Burned__Params {
    return new Burned__Params(this);
  }
}

export class Burned__Params {
  _event: Burned;

  constructor(event: Burned) {
    this._event = event;
  }

  get tokTypeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get burnedQty(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class BurnedFullSecToken extends ethereum.Event {
  get params(): BurnedFullSecToken__Params {
    return new BurnedFullSecToken__Params(this);
  }
}

export class BurnedFullSecToken__Params {
  _event: BurnedFullSecToken;

  constructor(event: BurnedFullSecToken) {
    this._event = event;
  }

  get stId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokTypeId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get burnedQty(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BurnedPartialSecToken extends ethereum.Event {
  get params(): BurnedPartialSecToken__Params {
    return new BurnedPartialSecToken__Params(this);
  }
}

export class BurnedPartialSecToken__Params {
  _event: BurnedPartialSecToken;

  constructor(event: BurnedPartialSecToken) {
    this._event = event;
  }

  get stId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokTypeId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get burnedQty(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class CcyFundedLedger extends ethereum.Event {
  get params(): CcyFundedLedger__Params {
    return new CcyFundedLedger__Params(this);
  }
}

export class CcyFundedLedger__Params {
  _event: CcyFundedLedger;

  constructor(event: CcyFundedLedger) {
    this._event = event;
  }

  get ccyTypeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get desc(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class CcyWithdrewLedger extends ethereum.Event {
  get params(): CcyWithdrewLedger__Params {
    return new CcyWithdrewLedger__Params(this);
  }
}

export class CcyWithdrewLedger__Params {
  _event: CcyWithdrewLedger;

  constructor(event: CcyWithdrewLedger) {
    this._event = event;
  }

  get ccyTypeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get desc(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class Combine extends ethereum.Event {
  get params(): Combine__Params {
    return new Combine__Params(this);
  }
}

export class Combine__Params {
  _event: Combine;

  constructor(event: Combine) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get masterStId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get countTokensCombined(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class FutureOpenInterest extends ethereum.Event {
  get params(): FutureOpenInterest__Params {
    return new FutureOpenInterest__Params(this);
  }
}

export class FutureOpenInterest__Params {
  _event: FutureOpenInterest;

  constructor(event: FutureOpenInterest) {
    this._event = event;
  }

  get long(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get short(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get shortStId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get tokTypeId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get qty(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get feeLong(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get feeShort(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class IssuanceSubscribed extends ethereum.Event {
  get params(): IssuanceSubscribed__Params {
    return new IssuanceSubscribed__Params(this);
  }
}

export class IssuanceSubscribed__Params {
  _event: IssuanceSubscribed;

  constructor(event: IssuanceSubscribed) {
    this._event = event;
  }

  get subscriber(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get issuer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get weiSent(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get weiChange(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get tokensSubscribed(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get weiPrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Minted extends ethereum.Event {
  get params(): Minted__Params {
    return new Minted__Params(this);
  }
}

export class Minted__Params {
  _event: Minted;

  constructor(event: Minted) {
    this._event = event;
  }

  get batchId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokTypeId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get mintQty(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get mintSecTokenCount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class MintedSecToken extends ethereum.Event {
  get params(): MintedSecToken__Params {
    return new MintedSecToken__Params(this);
  }
}

export class MintedSecToken__Params {
  _event: MintedSecToken;

  constructor(event: MintedSecToken) {
    this._event = event;
  }

  get stId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get batchId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokTypeId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get to(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get mintedQty(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ReservedLedgerCcy extends ethereum.Event {
  get params(): ReservedLedgerCcy__Params {
    return new ReservedLedgerCcy__Params(this);
  }
}

export class ReservedLedgerCcy__Params {
  _event: ReservedLedgerCcy;

  constructor(event: ReservedLedgerCcy) {
    this._event = event;
  }

  get ledgerOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ccyTypeId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetBatchOriginatorFee_Currency extends ethereum.Event {
  get params(): SetBatchOriginatorFee_Currency__Params {
    return new SetBatchOriginatorFee_Currency__Params(this);
  }
}

export class SetBatchOriginatorFee_Currency__Params {
  _event: SetBatchOriginatorFee_Currency;

  constructor(event: SetBatchOriginatorFee_Currency) {
    this._event = event;
  }

  get batchId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get origCcyFee_percBips_ExFee(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class SetBatchOriginatorFee_Token extends ethereum.Event {
  get params(): SetBatchOriginatorFee_Token__Params {
    return new SetBatchOriginatorFee_Token__Params(this);
  }
}

export class SetBatchOriginatorFee_Token__Params {
  _event: SetBatchOriginatorFee_Token;

  constructor(event: SetBatchOriginatorFee_Token) {
    this._event = event;
  }

  get batchId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get originatorFee(): SetBatchOriginatorFee_TokenOriginatorFeeStruct {
    return this._event.parameters[1].value.toTuple() as SetBatchOriginatorFee_TokenOriginatorFeeStruct;
  }
}

export class SetBatchOriginatorFee_TokenOriginatorFeeStruct extends ethereum.Tuple {
  get fee_fixed(): BigInt {
    return this[0].toBigInt();
  }

  get fee_percBips(): BigInt {
    return this[1].toBigInt();
  }

  get fee_min(): BigInt {
    return this[2].toBigInt();
  }

  get fee_max(): BigInt {
    return this[3].toBigInt();
  }

  get ccy_perMillion(): BigInt {
    return this[4].toBigInt();
  }

  get ccy_mirrorFee(): boolean {
    return this[5].toBoolean();
  }
}

export class SetFeeCcyBps extends ethereum.Event {
  get params(): SetFeeCcyBps__Params {
    return new SetFeeCcyBps__Params(this);
  }
}

export class SetFeeCcyBps__Params {
  _event: SetFeeCcyBps;

  constructor(event: SetFeeCcyBps) {
    this._event = event;
  }

  get ccyTypeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ledgerOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get fee_ccy_PercBips(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetFeeCcyFix extends ethereum.Event {
  get params(): SetFeeCcyFix__Params {
    return new SetFeeCcyFix__Params(this);
  }
}

export class SetFeeCcyFix__Params {
  _event: SetFeeCcyFix;

  constructor(event: SetFeeCcyFix) {
    this._event = event;
  }

  get ccyTypeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ledgerOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get fee_ccy_Fixed(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetFeeCcyMax extends ethereum.Event {
  get params(): SetFeeCcyMax__Params {
    return new SetFeeCcyMax__Params(this);
  }
}

export class SetFeeCcyMax__Params {
  _event: SetFeeCcyMax;

  constructor(event: SetFeeCcyMax) {
    this._event = event;
  }

  get ccyTypeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ledgerOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get fee_ccy_Max(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetFeeCcyMin extends ethereum.Event {
  get params(): SetFeeCcyMin__Params {
    return new SetFeeCcyMin__Params(this);
  }
}

export class SetFeeCcyMin__Params {
  _event: SetFeeCcyMin;

  constructor(event: SetFeeCcyMin) {
    this._event = event;
  }

  get ccyTypeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ledgerOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get fee_ccy_Min(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetFeeCcyPerMillion extends ethereum.Event {
  get params(): SetFeeCcyPerMillion__Params {
    return new SetFeeCcyPerMillion__Params(this);
  }
}

export class SetFeeCcyPerMillion__Params {
  _event: SetFeeCcyPerMillion;

  constructor(event: SetFeeCcyPerMillion) {
    this._event = event;
  }

  get ccyTypeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ledgerOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get fee_ccy_perMillion(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetFeeTokBps extends ethereum.Event {
  get params(): SetFeeTokBps__Params {
    return new SetFeeTokBps__Params(this);
  }
}

export class SetFeeTokBps__Params {
  _event: SetFeeTokBps;

  constructor(event: SetFeeTokBps) {
    this._event = event;
  }

  get tokTypeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ledgerOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get fee_token_PercBips(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetFeeTokFix extends ethereum.Event {
  get params(): SetFeeTokFix__Params {
    return new SetFeeTokFix__Params(this);
  }
}

export class SetFeeTokFix__Params {
  _event: SetFeeTokFix;

  constructor(event: SetFeeTokFix) {
    this._event = event;
  }

  get tokTypeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ledgerOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get fee_tokenQty_Fixed(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetFeeTokMax extends ethereum.Event {
  get params(): SetFeeTokMax__Params {
    return new SetFeeTokMax__Params(this);
  }
}

export class SetFeeTokMax__Params {
  _event: SetFeeTokMax;

  constructor(event: SetFeeTokMax) {
    this._event = event;
  }

  get tokTypeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ledgerOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get fee_token_Max(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetFeeTokMin extends ethereum.Event {
  get params(): SetFeeTokMin__Params {
    return new SetFeeTokMin__Params(this);
  }
}

export class SetFeeTokMin__Params {
  _event: SetFeeTokMin;

  constructor(event: SetFeeTokMin) {
    this._event = event;
  }

  get tokTypeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ledgerOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get fee_token_Min(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetFutureFeePerContract extends ethereum.Event {
  get params(): SetFutureFeePerContract__Params {
    return new SetFutureFeePerContract__Params(this);
  }
}

export class SetFutureFeePerContract__Params {
  _event: SetFutureFeePerContract;

  constructor(event: SetFutureFeePerContract) {
    this._event = event;
  }

  get tokTypeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get feePerContract(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetFutureVariationMargin extends ethereum.Event {
  get params(): SetFutureVariationMargin__Params {
    return new SetFutureVariationMargin__Params(this);
  }
}

export class SetFutureVariationMargin__Params {
  _event: SetFutureVariationMargin;

  constructor(event: SetFutureVariationMargin) {
    this._event = event;
  }

  get tokTypeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get varMarginBips(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class SetInitialMarginOverride extends ethereum.Event {
  get params(): SetInitialMarginOverride__Params {
    return new SetInitialMarginOverride__Params(this);
  }
}

export class SetInitialMarginOverride__Params {
  _event: SetInitialMarginOverride;

  constructor(event: SetInitialMarginOverride) {
    this._event = event;
  }

  get tokTypeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ledgerOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get initMarginBips(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class TakePay2 extends ethereum.Event {
  get params(): TakePay2__Params {
    return new TakePay2__Params(this);
  }
}

export class TakePay2__Params {
  _event: TakePay2;

  constructor(event: TakePay2) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get ccyId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get delta(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get done(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class TradedCcyTok extends ethereum.Event {
  get params(): TradedCcyTok__Params {
    return new TradedCcyTok__Params(this);
  }
}

export class TradedCcyTok__Params {
  _event: TradedCcyTok;

  constructor(event: TradedCcyTok) {
    this._event = event;
  }

  get ccyTypeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ccyAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokTypeId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get tokQty(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get ccyFeeFrom(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get ccyFeeTo(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TransferedFullSecToken extends ethereum.Event {
  get params(): TransferedFullSecToken__Params {
    return new TransferedFullSecToken__Params(this);
  }
}

export class TransferedFullSecToken__Params {
  _event: TransferedFullSecToken;

  constructor(event: TransferedFullSecToken) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get stId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get mergedToSecTokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get qty(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get transferType(): i32 {
    return this._event.parameters[5].value.toI32();
  }
}

export class TransferedLedgerCcy extends ethereum.Event {
  get params(): TransferedLedgerCcy__Params {
    return new TransferedLedgerCcy__Params(this);
  }
}

export class TransferedLedgerCcy__Params {
  _event: TransferedLedgerCcy;

  constructor(event: TransferedLedgerCcy) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get ccyTypeId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get transferType(): i32 {
    return this._event.parameters[4].value.toI32();
  }
}

export class TransferedPartialSecToken extends ethereum.Event {
  get params(): TransferedPartialSecToken__Params {
    return new TransferedPartialSecToken__Params(this);
  }
}

export class TransferedPartialSecToken__Params {
  _event: TransferedPartialSecToken;

  constructor(event: TransferedPartialSecToken) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get splitFromSecTokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get newSecTokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get mergedToSecTokenId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get qty(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get transferType(): i32 {
    return this._event.parameters[6].value.toI32();
  }
}

export class StMaster__getCcyTypesResultValue0Struct extends ethereum.Tuple {
  get ccyTypes(): Array<StMaster__getCcyTypesResultValue0CcyTypesStruct> {
    return this[0].toTupleArray<
      StMaster__getCcyTypesResultValue0CcyTypesStruct
    >();
  }
}

export class StMaster__getCcyTypesResultValue0CcyTypesStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get name(): string {
    return this[1].toString();
  }

  get unit(): string {
    return this[2].toString();
  }

  get decimals(): i32 {
    return this[3].toI32();
  }
}

export class StMaster__getFeeResultValue0Struct extends ethereum.Tuple {
  get fee_fixed(): BigInt {
    return this[0].toBigInt();
  }

  get fee_percBips(): BigInt {
    return this[1].toBigInt();
  }

  get fee_min(): BigInt {
    return this[2].toBigInt();
  }

  get fee_max(): BigInt {
    return this[3].toBigInt();
  }

  get ccy_perMillion(): BigInt {
    return this[4].toBigInt();
  }

  get ccy_mirrorFee(): boolean {
    return this[5].toBoolean();
  }
}

export class StMaster__getLedgerEntryResultValue0Struct extends ethereum.Tuple {
  get exists(): boolean {
    return this[0].toBoolean();
  }

  get tokens(): Array<StMaster__getLedgerEntryResultValue0TokensStruct> {
    return this[1].toTupleArray<
      StMaster__getLedgerEntryResultValue0TokensStruct
    >();
  }

  get spot_sumQty(): BigInt {
    return this[2].toBigInt();
  }

  get ccys(): Array<StMaster__getLedgerEntryResultValue0CcysStruct> {
    return this[3].toTupleArray<
      StMaster__getLedgerEntryResultValue0CcysStruct
    >();
  }

  get spot_sumQtyMinted(): BigInt {
    return this[4].toBigInt();
  }

  get spot_sumQtyBurned(): BigInt {
    return this[5].toBigInt();
  }
}

export class StMaster__getLedgerEntryResultValue0TokensStruct extends ethereum.Tuple {
  get exists(): boolean {
    return this[0].toBoolean();
  }

  get stId(): BigInt {
    return this[1].toBigInt();
  }

  get tokTypeId(): BigInt {
    return this[2].toBigInt();
  }

  get tokTypeName(): string {
    return this[3].toString();
  }

  get batchId(): BigInt {
    return this[4].toBigInt();
  }

  get mintedQty(): BigInt {
    return this[5].toBigInt();
  }

  get currentQty(): BigInt {
    return this[6].toBigInt();
  }

  get ft_price(): BigInt {
    return this[7].toBigInt();
  }

  get ft_ledgerOwner(): Address {
    return this[8].toAddress();
  }

  get ft_lastMarkPrice(): BigInt {
    return this[9].toBigInt();
  }

  get ft_PL(): BigInt {
    return this[10].toBigInt();
  }
}

export class StMaster__getLedgerEntryResultValue0CcysStruct extends ethereum.Tuple {
  get ccyTypeId(): BigInt {
    return this[0].toBigInt();
  }

  get name(): string {
    return this[1].toString();
  }

  get unit(): string {
    return this[2].toString();
  }

  get balance(): BigInt {
    return this[3].toBigInt();
  }

  get reserved(): BigInt {
    return this[4].toBigInt();
  }
}

export class StMaster__getSecTokenResultValue0Struct extends ethereum.Tuple {
  get exists(): boolean {
    return this[0].toBoolean();
  }

  get stId(): BigInt {
    return this[1].toBigInt();
  }

  get tokTypeId(): BigInt {
    return this[2].toBigInt();
  }

  get tokTypeName(): string {
    return this[3].toString();
  }

  get batchId(): BigInt {
    return this[4].toBigInt();
  }

  get mintedQty(): BigInt {
    return this[5].toBigInt();
  }

  get currentQty(): BigInt {
    return this[6].toBigInt();
  }

  get ft_price(): BigInt {
    return this[7].toBigInt();
  }

  get ft_ledgerOwner(): Address {
    return this[8].toAddress();
  }

  get ft_lastMarkPrice(): BigInt {
    return this[9].toBigInt();
  }

  get ft_PL(): BigInt {
    return this[10].toBigInt();
  }
}

export class StMaster__getSecTokenBatchResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get mintedTimestamp(): BigInt {
    return this[1].toBigInt();
  }

  get tokTypeId(): BigInt {
    return this[2].toBigInt();
  }

  get mintedQty(): BigInt {
    return this[3].toBigInt();
  }

  get burnedQty(): BigInt {
    return this[4].toBigInt();
  }

  get metaKeys(): Array<string> {
    return this[5].toStringArray();
  }

  get metaValues(): Array<string> {
    return this[6].toStringArray();
  }

  get origTokFee(): StMaster__getSecTokenBatchResultValue0OrigTokFeeStruct {
    return this[7].toTuple() as StMaster__getSecTokenBatchResultValue0OrigTokFeeStruct;
  }

  get origCcyFee_percBips_ExFee(): i32 {
    return this[8].toI32();
  }

  get originator(): Address {
    return this[9].toAddress();
  }
}

export class StMaster__getSecTokenBatchResultValue0OrigTokFeeStruct extends ethereum.Tuple {
  get fee_fixed(): BigInt {
    return this[0].toBigInt();
  }

  get fee_percBips(): BigInt {
    return this[1].toBigInt();
  }

  get fee_min(): BigInt {
    return this[2].toBigInt();
  }

  get fee_max(): BigInt {
    return this[3].toBigInt();
  }

  get ccy_perMillion(): BigInt {
    return this[4].toBigInt();
  }

  get ccy_mirrorFee(): boolean {
    return this[5].toBoolean();
  }
}

export class StMaster__getSecTokenTypesResultValue0Struct extends ethereum.Tuple {
  get tokenTypes(): Array<
    StMaster__getSecTokenTypesResultValue0TokenTypesStruct
  > {
    return this[0].toTupleArray<
      StMaster__getSecTokenTypesResultValue0TokenTypesStruct
    >();
  }
}

export class StMaster__getSecTokenTypesResultValue0TokenTypesStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get name(): string {
    return this[1].toString();
  }

  get settlementType(): i32 {
    return this[2].toI32();
  }

  get ft(): StMaster__getSecTokenTypesResultValue0TokenTypesFtStruct {
    return this[3].toTuple() as StMaster__getSecTokenTypesResultValue0TokenTypesFtStruct;
  }

  get cashflowBaseAddr(): Address {
    return this[4].toAddress();
  }
}

export class StMaster__getSecTokenTypesResultValue0TokenTypesFtStruct extends ethereum.Tuple {
  get expiryTimestamp(): BigInt {
    return this[0].toBigInt();
  }

  get underlyerTypeId(): BigInt {
    return this[1].toBigInt();
  }

  get refCcyId(): BigInt {
    return this[2].toBigInt();
  }

  get initMarginBips(): i32 {
    return this[3].toI32();
  }

  get varMarginBips(): i32 {
    return this[4].toI32();
  }

  get contractSize(): i32 {
    return this[5].toI32();
  }

  get feePerContract(): BigInt {
    return this[6].toBigInt();
  }
}

export class StMaster__transfer_feePreviewResultFeesAllStruct extends ethereum.Tuple {
  get fee_ccy_A(): BigInt {
    return this[0].toBigInt();
  }

  get fee_ccy_B(): BigInt {
    return this[1].toBigInt();
  }

  get fee_tok_A(): BigInt {
    return this[2].toBigInt();
  }

  get fee_tok_B(): BigInt {
    return this[3].toBigInt();
  }

  get fee_to(): Address {
    return this[4].toAddress();
  }

  get origTokFee_qty(): BigInt {
    return this[5].toBigInt();
  }

  get origTokFee_batchId(): BigInt {
    return this[6].toBigInt();
  }

  get origTokFee_struct(): StMaster__transfer_feePreviewResultFeesAllOrigTokFee_structStruct {
    return this[7].toTuple() as StMaster__transfer_feePreviewResultFeesAllOrigTokFee_structStruct;
  }
}

export class StMaster__transfer_feePreviewResultFeesAllOrigTokFee_structStruct extends ethereum.Tuple {
  get fee_fixed(): BigInt {
    return this[0].toBigInt();
  }

  get fee_percBips(): BigInt {
    return this[1].toBigInt();
  }

  get fee_min(): BigInt {
    return this[2].toBigInt();
  }

  get fee_max(): BigInt {
    return this[3].toBigInt();
  }

  get ccy_perMillion(): BigInt {
    return this[4].toBigInt();
  }

  get ccy_mirrorFee(): boolean {
    return this[5].toBoolean();
  }
}

export class StMaster__transfer_feePreviewInputAStruct extends ethereum.Tuple {
  get ledger_A(): Address {
    return this[0].toAddress();
  }

  get ledger_B(): Address {
    return this[1].toAddress();
  }

  get qty_A(): BigInt {
    return this[2].toBigInt();
  }

  get k_stIds_A(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get tokTypeId_A(): BigInt {
    return this[4].toBigInt();
  }

  get qty_B(): BigInt {
    return this[5].toBigInt();
  }

  get k_stIds_B(): Array<BigInt> {
    return this[6].toBigIntArray();
  }

  get tokTypeId_B(): BigInt {
    return this[7].toBigInt();
  }

  get ccy_amount_A(): BigInt {
    return this[8].toBigInt();
  }

  get ccyTypeId_A(): BigInt {
    return this[9].toBigInt();
  }

  get ccy_amount_B(): BigInt {
    return this[10].toBigInt();
  }

  get ccyTypeId_B(): BigInt {
    return this[11].toBigInt();
  }

  get applyFees(): boolean {
    return this[12].toBoolean();
  }

  get feeAddrOwner(): Address {
    return this[13].toAddress();
  }

  get transferType(): i32 {
    return this[14].toI32();
  }
}

export class StMaster__transfer_feePreview_ExchangeOnlyResultFeesAllStruct extends ethereum.Tuple {
  get fee_ccy_A(): BigInt {
    return this[0].toBigInt();
  }

  get fee_ccy_B(): BigInt {
    return this[1].toBigInt();
  }

  get fee_tok_A(): BigInt {
    return this[2].toBigInt();
  }

  get fee_tok_B(): BigInt {
    return this[3].toBigInt();
  }

  get fee_to(): Address {
    return this[4].toAddress();
  }

  get origTokFee_qty(): BigInt {
    return this[5].toBigInt();
  }

  get origTokFee_batchId(): BigInt {
    return this[6].toBigInt();
  }

  get origTokFee_struct(): StMaster__transfer_feePreview_ExchangeOnlyResultFeesAllOrigTokFee_structStruct {
    return this[7].toTuple() as StMaster__transfer_feePreview_ExchangeOnlyResultFeesAllOrigTokFee_structStruct;
  }
}

export class StMaster__transfer_feePreview_ExchangeOnlyResultFeesAllOrigTokFee_structStruct extends ethereum.Tuple {
  get fee_fixed(): BigInt {
    return this[0].toBigInt();
  }

  get fee_percBips(): BigInt {
    return this[1].toBigInt();
  }

  get fee_min(): BigInt {
    return this[2].toBigInt();
  }

  get fee_max(): BigInt {
    return this[3].toBigInt();
  }

  get ccy_perMillion(): BigInt {
    return this[4].toBigInt();
  }

  get ccy_mirrorFee(): boolean {
    return this[5].toBoolean();
  }
}

export class StMaster__transfer_feePreview_ExchangeOnlyInputAStruct extends ethereum.Tuple {
  get ledger_A(): Address {
    return this[0].toAddress();
  }

  get ledger_B(): Address {
    return this[1].toAddress();
  }

  get qty_A(): BigInt {
    return this[2].toBigInt();
  }

  get k_stIds_A(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get tokTypeId_A(): BigInt {
    return this[4].toBigInt();
  }

  get qty_B(): BigInt {
    return this[5].toBigInt();
  }

  get k_stIds_B(): Array<BigInt> {
    return this[6].toBigIntArray();
  }

  get tokTypeId_B(): BigInt {
    return this[7].toBigInt();
  }

  get ccy_amount_A(): BigInt {
    return this[8].toBigInt();
  }

  get ccyTypeId_A(): BigInt {
    return this[9].toBigInt();
  }

  get ccy_amount_B(): BigInt {
    return this[10].toBigInt();
  }

  get ccyTypeId_B(): BigInt {
    return this[11].toBigInt();
  }

  get applyFees(): boolean {
    return this[12].toBoolean();
  }

  get feeAddrOwner(): Address {
    return this[13].toAddress();
  }

  get transferType(): i32 {
    return this[14].toI32();
  }
}

export class StMaster extends ethereum.SmartContract {
  static bind(address: Address): StMaster {
    return new StMaster("StMaster", address);
  }

  getCcyTypes(): StMaster__getCcyTypesResultValue0Struct {
    let result = super.call(
      "getCcyTypes",
      "getCcyTypes():(((uint256,string,string,uint16)[]))",
      []
    );

    return result[0].toTuple() as StMaster__getCcyTypesResultValue0Struct;
  }

  try_getCcyTypes(): ethereum.CallResult<
    StMaster__getCcyTypesResultValue0Struct
  > {
    let result = super.tryCall(
      "getCcyTypes",
      "getCcyTypes():(((uint256,string,string,uint16)[]))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as StMaster__getCcyTypesResultValue0Struct
    );
  }

  getFee(
    feeType: i32,
    typeId: BigInt,
    ledgerOwner: Address
  ): StMaster__getFeeResultValue0Struct {
    let result = super.call(
      "getFee",
      "getFee(uint8,uint256,address):((uint256,uint256,uint256,uint256,uint256,bool))",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(feeType)),
        ethereum.Value.fromUnsignedBigInt(typeId),
        ethereum.Value.fromAddress(ledgerOwner)
      ]
    );

    return result[0].toTuple() as StMaster__getFeeResultValue0Struct;
  }

  try_getFee(
    feeType: i32,
    typeId: BigInt,
    ledgerOwner: Address
  ): ethereum.CallResult<StMaster__getFeeResultValue0Struct> {
    let result = super.tryCall(
      "getFee",
      "getFee(uint8,uint256,address):((uint256,uint256,uint256,uint256,uint256,bool))",
      [
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(feeType)),
        ethereum.Value.fromUnsignedBigInt(typeId),
        ethereum.Value.fromAddress(ledgerOwner)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as StMaster__getFeeResultValue0Struct
    );
  }

  getLedgerEntry(account: Address): StMaster__getLedgerEntryResultValue0Struct {
    let result = super.call(
      "getLedgerEntry",
      "getLedgerEntry(address):((bool,(bool,uint256,uint256,string,uint64,int64,int64,int128,address,int128,int128)[],uint256,(uint256,string,string,int256,int256)[],uint256,uint256))",
      [ethereum.Value.fromAddress(account)]
    );

    return result[0].toTuple() as StMaster__getLedgerEntryResultValue0Struct;
  }

  try_getLedgerEntry(
    account: Address
  ): ethereum.CallResult<StMaster__getLedgerEntryResultValue0Struct> {
    let result = super.tryCall(
      "getLedgerEntry",
      "getLedgerEntry(address):((bool,(bool,uint256,uint256,string,uint64,int64,int64,int128,address,int128,int128)[],uint256,(uint256,string,string,int256,int256)[],uint256,uint256))",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as StMaster__getLedgerEntryResultValue0Struct
    );
  }

  getLedgerHashcode(mod: BigInt, n: BigInt): Bytes {
    let result = super.call(
      "getLedgerHashcode",
      "getLedgerHashcode(uint256,uint256):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(mod),
        ethereum.Value.fromUnsignedBigInt(n)
      ]
    );

    return result[0].toBytes();
  }

  try_getLedgerHashcode(mod: BigInt, n: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getLedgerHashcode",
      "getLedgerHashcode(uint256,uint256):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(mod),
        ethereum.Value.fromUnsignedBigInt(n)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getLedgerOwner(index: BigInt): Address {
    let result = super.call(
      "getLedgerOwner",
      "getLedgerOwner(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );

    return result[0].toAddress();
  }

  try_getLedgerOwner(index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getLedgerOwner",
      "getLedgerOwner(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getLedgerOwnerCount(): BigInt {
    let result = super.call(
      "getLedgerOwnerCount",
      "getLedgerOwnerCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getLedgerOwnerCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLedgerOwnerCount",
      "getLedgerOwnerCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLedgerOwners(): Array<Address> {
    let result = super.call(
      "getLedgerOwners",
      "getLedgerOwners():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getLedgerOwners(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getLedgerOwners",
      "getLedgerOwners():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getOwners(): Array<Address> {
    let result = super.call("getOwners", "getOwners():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getOwners(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getOwners", "getOwners():(address[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getSecToken(id: BigInt): StMaster__getSecTokenResultValue0Struct {
    let result = super.call(
      "getSecToken",
      "getSecToken(uint256):((bool,uint256,uint256,string,uint64,int64,int64,int128,address,int128,int128))",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );

    return result[0].toTuple() as StMaster__getSecTokenResultValue0Struct;
  }

  try_getSecToken(
    id: BigInt
  ): ethereum.CallResult<StMaster__getSecTokenResultValue0Struct> {
    let result = super.tryCall(
      "getSecToken",
      "getSecToken(uint256):((bool,uint256,uint256,string,uint64,int64,int64,int128,address,int128,int128))",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as StMaster__getSecTokenResultValue0Struct
    );
  }

  getSecTokenBatch(
    batchId: BigInt
  ): StMaster__getSecTokenBatchResultValue0Struct {
    let result = super.call(
      "getSecTokenBatch",
      "getSecTokenBatch(uint256):((uint64,uint256,uint256,uint256,uint256,string[],string[],(uint256,uint256,uint256,uint256,uint256,bool),uint16,address))",
      [ethereum.Value.fromUnsignedBigInt(batchId)]
    );

    return result[0].toTuple() as StMaster__getSecTokenBatchResultValue0Struct;
  }

  try_getSecTokenBatch(
    batchId: BigInt
  ): ethereum.CallResult<StMaster__getSecTokenBatchResultValue0Struct> {
    let result = super.tryCall(
      "getSecTokenBatch",
      "getSecTokenBatch(uint256):((uint64,uint256,uint256,uint256,uint256,string[],string[],(uint256,uint256,uint256,uint256,uint256,bool),uint16,address))",
      [ethereum.Value.fromUnsignedBigInt(batchId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as StMaster__getSecTokenBatchResultValue0Struct
    );
  }

  getSecTokenBatch_MaxId(): BigInt {
    let result = super.call(
      "getSecTokenBatch_MaxId",
      "getSecTokenBatch_MaxId():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getSecTokenBatch_MaxId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSecTokenBatch_MaxId",
      "getSecTokenBatch_MaxId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSecTokenTypes(): StMaster__getSecTokenTypesResultValue0Struct {
    let result = super.call(
      "getSecTokenTypes",
      "getSecTokenTypes():(((uint256,string,uint8,(uint64,uint256,uint256,uint16,uint16,uint16,uint128),address)[]))",
      []
    );

    return result[0].toTuple() as StMaster__getSecTokenTypesResultValue0Struct;
  }

  try_getSecTokenTypes(): ethereum.CallResult<
    StMaster__getSecTokenTypesResultValue0Struct
  > {
    let result = super.tryCall(
      "getSecTokenTypes",
      "getSecTokenTypes():(((uint256,string,uint8,(uint64,uint256,uint256,uint16,uint16,uint16,uint128),address)[]))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as StMaster__getSecTokenTypesResultValue0Struct
    );
  }

  getSecToken_BaseId(): BigInt {
    let result = super.call(
      "getSecToken_BaseId",
      "getSecToken_BaseId():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getSecToken_BaseId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSecToken_BaseId",
      "getSecToken_BaseId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSecToken_MaxId(): BigInt {
    let result = super.call(
      "getSecToken_MaxId",
      "getSecToken_MaxId():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getSecToken_MaxId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSecToken_MaxId",
      "getSecToken_MaxId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSecToken_totalBurnedQty(): BigInt {
    let result = super.call(
      "getSecToken_totalBurnedQty",
      "getSecToken_totalBurnedQty():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getSecToken_totalBurnedQty(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSecToken_totalBurnedQty",
      "getSecToken_totalBurnedQty():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSecToken_totalMintedQty(): BigInt {
    let result = super.call(
      "getSecToken_totalMintedQty",
      "getSecToken_totalMintedQty():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getSecToken_totalMintedQty(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSecToken_totalMintedQty",
      "getSecToken_totalMintedQty():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getWhitelist(): Array<Address> {
    let result = super.call("getWhitelist", "getWhitelist():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getWhitelist(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getWhitelist",
      "getWhitelist():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  readOnly(): boolean {
    let result = super.call("readOnly", "readOnly():(bool)", []);

    return result[0].toBoolean();
  }

  try_readOnly(): ethereum.CallResult<boolean> {
    let result = super.tryCall("readOnly", "readOnly():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  transfer_feePreview(
    a: StMaster__transfer_feePreviewInputAStruct
  ): Array<StMaster__transfer_feePreviewResultFeesAllStruct> {
    let result = super.call(
      "transfer_feePreview",
      "transfer_feePreview((address,address,uint256,uint256[],uint256,uint256,uint256[],uint256,int256,uint256,int256,uint256,bool,address,uint8)):((uint256,uint256,uint256,uint256,address,uint256,uint64,(uint256,uint256,uint256,uint256,uint256,bool))[257])",
      [ethereum.Value.fromTuple(a)]
    );

    return result[0].toTupleArray<
      StMaster__transfer_feePreviewResultFeesAllStruct
    >();
  }

  try_transfer_feePreview(
    a: StMaster__transfer_feePreviewInputAStruct
  ): ethereum.CallResult<
    Array<StMaster__transfer_feePreviewResultFeesAllStruct>
  > {
    let result = super.tryCall(
      "transfer_feePreview",
      "transfer_feePreview((address,address,uint256,uint256[],uint256,uint256,uint256[],uint256,int256,uint256,int256,uint256,bool,address,uint8)):((uint256,uint256,uint256,uint256,address,uint256,uint64,(uint256,uint256,uint256,uint256,uint256,bool))[257])",
      [ethereum.Value.fromTuple(a)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<StMaster__transfer_feePreviewResultFeesAllStruct>()
    );
  }

  transfer_feePreview_ExchangeOnly(
    a: StMaster__transfer_feePreview_ExchangeOnlyInputAStruct
  ): Array<StMaster__transfer_feePreview_ExchangeOnlyResultFeesAllStruct> {
    let result = super.call(
      "transfer_feePreview_ExchangeOnly",
      "transfer_feePreview_ExchangeOnly((address,address,uint256,uint256[],uint256,uint256,uint256[],uint256,int256,uint256,int256,uint256,bool,address,uint8)):((uint256,uint256,uint256,uint256,address,uint256,uint64,(uint256,uint256,uint256,uint256,uint256,bool))[1])",
      [ethereum.Value.fromTuple(a)]
    );

    return result[0].toTupleArray<
      StMaster__transfer_feePreview_ExchangeOnlyResultFeesAllStruct
    >();
  }

  try_transfer_feePreview_ExchangeOnly(
    a: StMaster__transfer_feePreview_ExchangeOnlyInputAStruct
  ): ethereum.CallResult<
    Array<StMaster__transfer_feePreview_ExchangeOnlyResultFeesAllStruct>
  > {
    let result = super.tryCall(
      "transfer_feePreview_ExchangeOnly",
      "transfer_feePreview_ExchangeOnly((address,address,uint256,uint256[],uint256,uint256,uint256[],uint256,int256,uint256,int256,uint256,bool,address,uint8)):((uint256,uint256,uint256,uint256,address,uint256,uint64,(uint256,uint256,uint256,uint256,uint256,bool))[1])",
      [ethereum.Value.fromTuple(a)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        StMaster__transfer_feePreview_ExchangeOnlyResultFeesAllStruct
      >()
    );
  }

  getContractType(): i32 {
    let result = super.call("getContractType", "getContractType():(uint8)", []);

    return result[0].toI32();
  }

  try_getContractType(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getContractType",
      "getContractType():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getContractSeal(): boolean {
    let result = super.call("getContractSeal", "getContractSeal():(bool)", []);

    return result[0].toBoolean();
  }

  try_getContractSeal(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getContractSeal",
      "getContractSeal():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  version(): string {
    let result = super.call("version", "version():(string)", []);

    return result[0].toString();
  }

  try_version(): ethereum.CallResult<string> {
    let result = super.tryCall("version", "version():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  unit(): string {
    let result = super.call("unit", "unit():(string)", []);

    return result[0].toString();
  }

  try_unit(): ethereum.CallResult<string> {
    let result = super.tryCall("unit", "unit():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _owners(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _contractType(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _contractName(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _contractVer(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _contractUnit(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddCcyTypeCall extends ethereum.Call {
  get inputs(): AddCcyTypeCall__Inputs {
    return new AddCcyTypeCall__Inputs(this);
  }

  get outputs(): AddCcyTypeCall__Outputs {
    return new AddCcyTypeCall__Outputs(this);
  }
}

export class AddCcyTypeCall__Inputs {
  _call: AddCcyTypeCall;

  constructor(call: AddCcyTypeCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get unit(): string {
    return this._call.inputValues[1].value.toString();
  }

  get decimals(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class AddCcyTypeCall__Outputs {
  _call: AddCcyTypeCall;

  constructor(call: AddCcyTypeCall) {
    this._call = call;
  }
}

export class AddMetaSecTokenBatchCall extends ethereum.Call {
  get inputs(): AddMetaSecTokenBatchCall__Inputs {
    return new AddMetaSecTokenBatchCall__Inputs(this);
  }

  get outputs(): AddMetaSecTokenBatchCall__Outputs {
    return new AddMetaSecTokenBatchCall__Outputs(this);
  }
}

export class AddMetaSecTokenBatchCall__Inputs {
  _call: AddMetaSecTokenBatchCall;

  constructor(call: AddMetaSecTokenBatchCall) {
    this._call = call;
  }

  get batchId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get metaKeyNew(): string {
    return this._call.inputValues[1].value.toString();
  }

  get metaValueNew(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class AddMetaSecTokenBatchCall__Outputs {
  _call: AddMetaSecTokenBatchCall;

  constructor(call: AddMetaSecTokenBatchCall) {
    this._call = call;
  }
}

export class AddSecTokenCall extends ethereum.Call {
  get inputs(): AddSecTokenCall__Inputs {
    return new AddSecTokenCall__Inputs(this);
  }

  get outputs(): AddSecTokenCall__Outputs {
    return new AddSecTokenCall__Outputs(this);
  }
}

export class AddSecTokenCall__Inputs {
  _call: AddSecTokenCall;

  constructor(call: AddSecTokenCall) {
    this._call = call;
  }

  get ledgerEntryOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get batchId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get stId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get tokTypeId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get mintedQty(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get currentQty(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get ft_price(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get ft_lastMarkPrice(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get ft_ledgerOwner(): Address {
    return this._call.inputValues[8].value.toAddress();
  }

  get ft_PL(): BigInt {
    return this._call.inputValues[9].value.toBigInt();
  }
}

export class AddSecTokenCall__Outputs {
  _call: AddSecTokenCall;

  constructor(call: AddSecTokenCall) {
    this._call = call;
  }
}

export class AddSecTokenTypeCall extends ethereum.Call {
  get inputs(): AddSecTokenTypeCall__Inputs {
    return new AddSecTokenTypeCall__Inputs(this);
  }

  get outputs(): AddSecTokenTypeCall__Outputs {
    return new AddSecTokenTypeCall__Outputs(this);
  }
}

export class AddSecTokenTypeCall__Inputs {
  _call: AddSecTokenTypeCall;

  constructor(call: AddSecTokenTypeCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get settlementType(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get ft(): AddSecTokenTypeCallFtStruct {
    return this._call.inputValues[2].value.toTuple() as AddSecTokenTypeCallFtStruct;
  }

  get cashflowBaseAddr(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class AddSecTokenTypeCall__Outputs {
  _call: AddSecTokenTypeCall;

  constructor(call: AddSecTokenTypeCall) {
    this._call = call;
  }
}

export class AddSecTokenTypeCallFtStruct extends ethereum.Tuple {
  get expiryTimestamp(): BigInt {
    return this[0].toBigInt();
  }

  get underlyerTypeId(): BigInt {
    return this[1].toBigInt();
  }

  get refCcyId(): BigInt {
    return this[2].toBigInt();
  }

  get initMarginBips(): i32 {
    return this[3].toI32();
  }

  get varMarginBips(): i32 {
    return this[4].toI32();
  }

  get contractSize(): i32 {
    return this[5].toI32();
  }

  get feePerContract(): BigInt {
    return this[6].toBigInt();
  }
}

export class BurnTokensCall extends ethereum.Call {
  get inputs(): BurnTokensCall__Inputs {
    return new BurnTokensCall__Inputs(this);
  }

  get outputs(): BurnTokensCall__Outputs {
    return new BurnTokensCall__Outputs(this);
  }
}

export class BurnTokensCall__Inputs {
  _call: BurnTokensCall;

  constructor(call: BurnTokensCall) {
    this._call = call;
  }

  get ledgerOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokTypeId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get burnQty(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get stIds(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }
}

export class BurnTokensCall__Outputs {
  _call: BurnTokensCall;

  constructor(call: BurnTokensCall) {
    this._call = call;
  }
}

export class CreateLedgerEntryCall extends ethereum.Call {
  get inputs(): CreateLedgerEntryCall__Inputs {
    return new CreateLedgerEntryCall__Inputs(this);
  }

  get outputs(): CreateLedgerEntryCall__Outputs {
    return new CreateLedgerEntryCall__Outputs(this);
  }
}

export class CreateLedgerEntryCall__Inputs {
  _call: CreateLedgerEntryCall;

  constructor(call: CreateLedgerEntryCall) {
    this._call = call;
  }

  get ledgerEntryOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get ccys(): Array<CreateLedgerEntryCallCcysStruct> {
    return this._call.inputValues[1].value.toTupleArray<
      CreateLedgerEntryCallCcysStruct
    >();
  }

  get spot_sumQtyMinted(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get spot_sumQtyBurned(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class CreateLedgerEntryCall__Outputs {
  _call: CreateLedgerEntryCall;

  constructor(call: CreateLedgerEntryCall) {
    this._call = call;
  }
}

export class CreateLedgerEntryCallCcysStruct extends ethereum.Tuple {
  get ccyTypeId(): BigInt {
    return this[0].toBigInt();
  }

  get name(): string {
    return this[1].toString();
  }

  get unit(): string {
    return this[2].toString();
  }

  get balance(): BigInt {
    return this[3].toBigInt();
  }

  get reserved(): BigInt {
    return this[4].toBigInt();
  }
}

export class FundOrWithdrawCall extends ethereum.Call {
  get inputs(): FundOrWithdrawCall__Inputs {
    return new FundOrWithdrawCall__Inputs(this);
  }

  get outputs(): FundOrWithdrawCall__Outputs {
    return new FundOrWithdrawCall__Outputs(this);
  }
}

export class FundOrWithdrawCall__Inputs {
  _call: FundOrWithdrawCall;

  constructor(call: FundOrWithdrawCall) {
    this._call = call;
  }

  get direction(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get ccyTypeId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get ledgerOwner(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get desc(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class FundOrWithdrawCall__Outputs {
  _call: FundOrWithdrawCall;

  constructor(call: FundOrWithdrawCall) {
    this._call = call;
  }
}

export class LoadSecTokenBatchCall extends ethereum.Call {
  get inputs(): LoadSecTokenBatchCall__Inputs {
    return new LoadSecTokenBatchCall__Inputs(this);
  }

  get outputs(): LoadSecTokenBatchCall__Outputs {
    return new LoadSecTokenBatchCall__Outputs(this);
  }
}

export class LoadSecTokenBatchCall__Inputs {
  _call: LoadSecTokenBatchCall;

  constructor(call: LoadSecTokenBatchCall) {
    this._call = call;
  }

  get batches(): Array<LoadSecTokenBatchCallBatchesStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      LoadSecTokenBatchCallBatchesStruct
    >();
  }

  get _batches_currentMax_id(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class LoadSecTokenBatchCall__Outputs {
  _call: LoadSecTokenBatchCall;

  constructor(call: LoadSecTokenBatchCall) {
    this._call = call;
  }
}

export class LoadSecTokenBatchCallBatchesStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get mintedTimestamp(): BigInt {
    return this[1].toBigInt();
  }

  get tokTypeId(): BigInt {
    return this[2].toBigInt();
  }

  get mintedQty(): BigInt {
    return this[3].toBigInt();
  }

  get burnedQty(): BigInt {
    return this[4].toBigInt();
  }

  get metaKeys(): Array<string> {
    return this[5].toStringArray();
  }

  get metaValues(): Array<string> {
    return this[6].toStringArray();
  }

  get origTokFee(): LoadSecTokenBatchCallBatchesOrigTokFeeStruct {
    return this[7].toTuple() as LoadSecTokenBatchCallBatchesOrigTokFeeStruct;
  }

  get origCcyFee_percBips_ExFee(): i32 {
    return this[8].toI32();
  }

  get originator(): Address {
    return this[9].toAddress();
  }
}

export class LoadSecTokenBatchCallBatchesOrigTokFeeStruct extends ethereum.Tuple {
  get fee_fixed(): BigInt {
    return this[0].toBigInt();
  }

  get fee_percBips(): BigInt {
    return this[1].toBigInt();
  }

  get fee_min(): BigInt {
    return this[2].toBigInt();
  }

  get fee_max(): BigInt {
    return this[3].toBigInt();
  }

  get ccy_perMillion(): BigInt {
    return this[4].toBigInt();
  }

  get ccy_mirrorFee(): boolean {
    return this[5].toBoolean();
  }
}

export class MintSecTokenBatchCall extends ethereum.Call {
  get inputs(): MintSecTokenBatchCall__Inputs {
    return new MintSecTokenBatchCall__Inputs(this);
  }

  get outputs(): MintSecTokenBatchCall__Outputs {
    return new MintSecTokenBatchCall__Outputs(this);
  }
}

export class MintSecTokenBatchCall__Inputs {
  _call: MintSecTokenBatchCall;

  constructor(call: MintSecTokenBatchCall) {
    this._call = call;
  }

  get tokTypeId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get mintQty(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get mintSecTokenCount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get batchOwner(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get originatorFee(): MintSecTokenBatchCallOriginatorFeeStruct {
    return this._call.inputValues[4].value.toTuple() as MintSecTokenBatchCallOriginatorFeeStruct;
  }

  get origCcyFee_percBips_ExFee(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get metaKeys(): Array<string> {
    return this._call.inputValues[6].value.toStringArray();
  }

  get metaValues(): Array<string> {
    return this._call.inputValues[7].value.toStringArray();
  }
}

export class MintSecTokenBatchCall__Outputs {
  _call: MintSecTokenBatchCall;

  constructor(call: MintSecTokenBatchCall) {
    this._call = call;
  }
}

export class MintSecTokenBatchCallOriginatorFeeStruct extends ethereum.Tuple {
  get fee_fixed(): BigInt {
    return this[0].toBigInt();
  }

  get fee_percBips(): BigInt {
    return this[1].toBigInt();
  }

  get fee_min(): BigInt {
    return this[2].toBigInt();
  }

  get fee_max(): BigInt {
    return this[3].toBigInt();
  }

  get ccy_perMillion(): BigInt {
    return this[4].toBigInt();
  }

  get ccy_mirrorFee(): boolean {
    return this[5].toBoolean();
  }
}

export class SetFee_CcyTypeCall extends ethereum.Call {
  get inputs(): SetFee_CcyTypeCall__Inputs {
    return new SetFee_CcyTypeCall__Inputs(this);
  }

  get outputs(): SetFee_CcyTypeCall__Outputs {
    return new SetFee_CcyTypeCall__Outputs(this);
  }
}

export class SetFee_CcyTypeCall__Inputs {
  _call: SetFee_CcyTypeCall;

  constructor(call: SetFee_CcyTypeCall) {
    this._call = call;
  }

  get ccyTypeId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get ledgerOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get feeArgs(): SetFee_CcyTypeCallFeeArgsStruct {
    return this._call.inputValues[2].value.toTuple() as SetFee_CcyTypeCallFeeArgsStruct;
  }
}

export class SetFee_CcyTypeCall__Outputs {
  _call: SetFee_CcyTypeCall;

  constructor(call: SetFee_CcyTypeCall) {
    this._call = call;
  }
}

export class SetFee_CcyTypeCallFeeArgsStruct extends ethereum.Tuple {
  get fee_fixed(): BigInt {
    return this[0].toBigInt();
  }

  get fee_percBips(): BigInt {
    return this[1].toBigInt();
  }

  get fee_min(): BigInt {
    return this[2].toBigInt();
  }

  get fee_max(): BigInt {
    return this[3].toBigInt();
  }

  get ccy_perMillion(): BigInt {
    return this[4].toBigInt();
  }

  get ccy_mirrorFee(): boolean {
    return this[5].toBoolean();
  }
}

export class SetFee_TokTypeCall extends ethereum.Call {
  get inputs(): SetFee_TokTypeCall__Inputs {
    return new SetFee_TokTypeCall__Inputs(this);
  }

  get outputs(): SetFee_TokTypeCall__Outputs {
    return new SetFee_TokTypeCall__Outputs(this);
  }
}

export class SetFee_TokTypeCall__Inputs {
  _call: SetFee_TokTypeCall;

  constructor(call: SetFee_TokTypeCall) {
    this._call = call;
  }

  get tokTypeId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get ledgerOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get feeArgs(): SetFee_TokTypeCallFeeArgsStruct {
    return this._call.inputValues[2].value.toTuple() as SetFee_TokTypeCallFeeArgsStruct;
  }
}

export class SetFee_TokTypeCall__Outputs {
  _call: SetFee_TokTypeCall;

  constructor(call: SetFee_TokTypeCall) {
    this._call = call;
  }
}

export class SetFee_TokTypeCallFeeArgsStruct extends ethereum.Tuple {
  get fee_fixed(): BigInt {
    return this[0].toBigInt();
  }

  get fee_percBips(): BigInt {
    return this[1].toBigInt();
  }

  get fee_min(): BigInt {
    return this[2].toBigInt();
  }

  get fee_max(): BigInt {
    return this[3].toBigInt();
  }

  get ccy_perMillion(): BigInt {
    return this[4].toBigInt();
  }

  get ccy_mirrorFee(): boolean {
    return this[5].toBoolean();
  }
}

export class SetOriginatorFeeCurrencyBatchCall extends ethereum.Call {
  get inputs(): SetOriginatorFeeCurrencyBatchCall__Inputs {
    return new SetOriginatorFeeCurrencyBatchCall__Inputs(this);
  }

  get outputs(): SetOriginatorFeeCurrencyBatchCall__Outputs {
    return new SetOriginatorFeeCurrencyBatchCall__Outputs(this);
  }
}

export class SetOriginatorFeeCurrencyBatchCall__Inputs {
  _call: SetOriginatorFeeCurrencyBatchCall;

  constructor(call: SetOriginatorFeeCurrencyBatchCall) {
    this._call = call;
  }

  get batchId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get origCcyFee_percBips_ExFee(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class SetOriginatorFeeCurrencyBatchCall__Outputs {
  _call: SetOriginatorFeeCurrencyBatchCall;

  constructor(call: SetOriginatorFeeCurrencyBatchCall) {
    this._call = call;
  }
}

export class SetOriginatorFeeTokenBatchCall extends ethereum.Call {
  get inputs(): SetOriginatorFeeTokenBatchCall__Inputs {
    return new SetOriginatorFeeTokenBatchCall__Inputs(this);
  }

  get outputs(): SetOriginatorFeeTokenBatchCall__Outputs {
    return new SetOriginatorFeeTokenBatchCall__Outputs(this);
  }
}

export class SetOriginatorFeeTokenBatchCall__Inputs {
  _call: SetOriginatorFeeTokenBatchCall;

  constructor(call: SetOriginatorFeeTokenBatchCall) {
    this._call = call;
  }

  get batchId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get originatorFee(): SetOriginatorFeeTokenBatchCallOriginatorFeeStruct {
    return this._call.inputValues[1].value.toTuple() as SetOriginatorFeeTokenBatchCallOriginatorFeeStruct;
  }
}

export class SetOriginatorFeeTokenBatchCall__Outputs {
  _call: SetOriginatorFeeTokenBatchCall;

  constructor(call: SetOriginatorFeeTokenBatchCall) {
    this._call = call;
  }
}

export class SetOriginatorFeeTokenBatchCallOriginatorFeeStruct extends ethereum.Tuple {
  get fee_fixed(): BigInt {
    return this[0].toBigInt();
  }

  get fee_percBips(): BigInt {
    return this[1].toBigInt();
  }

  get fee_min(): BigInt {
    return this[2].toBigInt();
  }

  get fee_max(): BigInt {
    return this[3].toBigInt();
  }

  get ccy_perMillion(): BigInt {
    return this[4].toBigInt();
  }

  get ccy_mirrorFee(): boolean {
    return this[5].toBoolean();
  }
}

export class SetReadOnlyCall extends ethereum.Call {
  get inputs(): SetReadOnlyCall__Inputs {
    return new SetReadOnlyCall__Inputs(this);
  }

  get outputs(): SetReadOnlyCall__Outputs {
    return new SetReadOnlyCall__Outputs(this);
  }
}

export class SetReadOnlyCall__Inputs {
  _call: SetReadOnlyCall;

  constructor(call: SetReadOnlyCall) {
    this._call = call;
  }

  get readOnlyNewState(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetReadOnlyCall__Outputs {
  _call: SetReadOnlyCall;

  constructor(call: SetReadOnlyCall) {
    this._call = call;
  }
}

export class SetTokenTotalsCall extends ethereum.Call {
  get inputs(): SetTokenTotalsCall__Inputs {
    return new SetTokenTotalsCall__Inputs(this);
  }

  get outputs(): SetTokenTotalsCall__Outputs {
    return new SetTokenTotalsCall__Outputs(this);
  }
}

export class SetTokenTotalsCall__Inputs {
  _call: SetTokenTotalsCall;

  constructor(call: SetTokenTotalsCall) {
    this._call = call;
  }

  get base_id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get currentMax_id(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get totalMintedQty(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get totalBurnedQty(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class SetTokenTotalsCall__Outputs {
  _call: SetTokenTotalsCall;

  constructor(call: SetTokenTotalsCall) {
    this._call = call;
  }
}

export class TransferOrTradeCall extends ethereum.Call {
  get inputs(): TransferOrTradeCall__Inputs {
    return new TransferOrTradeCall__Inputs(this);
  }

  get outputs(): TransferOrTradeCall__Outputs {
    return new TransferOrTradeCall__Outputs(this);
  }
}

export class TransferOrTradeCall__Inputs {
  _call: TransferOrTradeCall;

  constructor(call: TransferOrTradeCall) {
    this._call = call;
  }

  get a(): TransferOrTradeCallAStruct {
    return this._call.inputValues[0].value.toTuple() as TransferOrTradeCallAStruct;
  }
}

export class TransferOrTradeCall__Outputs {
  _call: TransferOrTradeCall;

  constructor(call: TransferOrTradeCall) {
    this._call = call;
  }
}

export class TransferOrTradeCallAStruct extends ethereum.Tuple {
  get ledger_A(): Address {
    return this[0].toAddress();
  }

  get ledger_B(): Address {
    return this[1].toAddress();
  }

  get qty_A(): BigInt {
    return this[2].toBigInt();
  }

  get k_stIds_A(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get tokTypeId_A(): BigInt {
    return this[4].toBigInt();
  }

  get qty_B(): BigInt {
    return this[5].toBigInt();
  }

  get k_stIds_B(): Array<BigInt> {
    return this[6].toBigIntArray();
  }

  get tokTypeId_B(): BigInt {
    return this[7].toBigInt();
  }

  get ccy_amount_A(): BigInt {
    return this[8].toBigInt();
  }

  get ccyTypeId_A(): BigInt {
    return this[9].toBigInt();
  }

  get ccy_amount_B(): BigInt {
    return this[10].toBigInt();
  }

  get ccyTypeId_B(): BigInt {
    return this[11].toBigInt();
  }

  get applyFees(): boolean {
    return this[12].toBoolean();
  }

  get feeAddrOwner(): Address {
    return this[13].toAddress();
  }

  get transferType(): i32 {
    return this[14].toI32();
  }
}

export class WhitelistManyCall extends ethereum.Call {
  get inputs(): WhitelistManyCall__Inputs {
    return new WhitelistManyCall__Inputs(this);
  }

  get outputs(): WhitelistManyCall__Outputs {
    return new WhitelistManyCall__Outputs(this);
  }
}

export class WhitelistManyCall__Inputs {
  _call: WhitelistManyCall;

  constructor(call: WhitelistManyCall) {
    this._call = call;
  }

  get addr(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class WhitelistManyCall__Outputs {
  _call: WhitelistManyCall;

  constructor(call: WhitelistManyCall) {
    this._call = call;
  }
}

export class SealContractCall extends ethereum.Call {
  get inputs(): SealContractCall__Inputs {
    return new SealContractCall__Inputs(this);
  }

  get outputs(): SealContractCall__Outputs {
    return new SealContractCall__Outputs(this);
  }
}

export class SealContractCall__Inputs {
  _call: SealContractCall;

  constructor(call: SealContractCall) {
    this._call = call;
  }
}

export class SealContractCall__Outputs {
  _call: SealContractCall;

  constructor(call: SealContractCall) {
    this._call = call;
  }
}
